{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { aboutUser, auth } from \"../../actions\";\nimport '../static/AboutForm.css';\nimport { getCookie } from './get_csrf.js';\n\nclass AboutUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: this.props.aboutUser.location,\n      github: this.props.aboutUser.github,\n      linkedin: this.props.aboutUser.linkedin,\n      twitter_handle: this.props.aboutUser.twitter_handle,\n      bio: this.props.aboutUser.bio,\n      avi_path: this.props.aboutUser.avi_path\n    };\n\n    this.aboutSubmit = e => {\n      e.preventDefault();\n      var csrftoken = getCookie('csrftoken');\n      this.props.updateAboutUser(this.state.location, this.state.github, this.state.linkedin, this.state.twitter_handle, this.state.bio, this.state.avi_path, csrftoken).then(this.props.fetchAboutUser()).then(window.location.reload(true));\n    };\n  }\n\n  uploadWidget() {\n    window.cloudinary.destroy(this.props.aboutUser.user_id, function (error, result) {\n      console.log(result, error);\n    });\n    window.cloudinary.openUploadWidget({\n      cloud_name: 'guruapp',\n      upload_preset: 'pro_pic',\n      api_key: '328295839766139',\n      unsigned: true,\n      public_id: this.props.aboutUser.user_id,\n      return_delete_token: true\n    }, function (error, result) {\n      console.log(result);\n      var data = {\n        'avi_path': result[0].url,\n        'user_id': result[0].public_id\n      };\n      fetch(\"/api/avi/\", {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        credentials: \"same-origin\"\n      }).then(function (response) {\n        return response.text();\n      }, function (error) {});\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchAboutUser();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.aboutSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        github: e.target.value\n      }),\n      placeholder: \"Github\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        linkedin: e.target.value\n      }),\n      placeholder: \"LinkedIn\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        twitter_handle: e.target.value\n      }),\n      placeholder: \"Twitter\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      maxLength: \"500\",\n      placeholder: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"button\", {\n      onClick: this.uploadWidget.bind(this),\n      className: \"upload-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Add Image\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location, github, linkedin, twitter_handle, bio, avi_path, csrftoken) => dispatch(aboutUser.updateAboutUser(location, github, linkedin, twitter_handle, bio, avi_path, csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js"],"names":["React","Component","connect","aboutUser","auth","getCookie","AboutUser","state","location","props","github","linkedin","twitter_handle","bio","avi_path","aboutSubmit","e","preventDefault","csrftoken","updateAboutUser","then","fetchAboutUser","window","reload","uploadWidget","cloudinary","destroy","user_id","error","result","console","log","openUploadWidget","cloud_name","upload_preset","api_key","unsigned","public_id","return_delete_token","data","url","fetch","method","body","JSON","stringify","headers","credentials","response","text","componentDidMount","render","setState","target","value","bind","mapStateToProps","user","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {aboutUser,auth} from \"../../actions\";\nimport '../static/AboutForm.css';\nimport {getCookie} from './get_csrf.js'\n\nclass AboutUser extends Component {\n  state = {\n    location:this.props.aboutUser.location,\n    github: this.props.aboutUser.github,\n    linkedin: this.props.aboutUser.linkedin,\n    twitter_handle:  this.props.aboutUser.twitter_handle,\n    bio: this.props.aboutUser.bio,\n    avi_path:this.props.aboutUser.avi_path,\n  }\n\n  uploadWidget() {\n\n        window.cloudinary.destroy(this.props.aboutUser.user_id, function(error,result) {console.log(result, error) });\n\n        window.cloudinary.openUploadWidget({ cloud_name: 'guruapp', upload_preset: 'pro_pic', api_key:'328295839766139',\n       unsigned: true, public_id:this.props.aboutUser.user_id,return_delete_token:true,},\n            function(error, result) {\n              console.log(result);\n\n                var data={'avi_path':result[0].url,'user_id':result[0].public_id};\n              fetch(`/api/avi/`, {method: \"PUT\",body: JSON.stringify(data),\n                    headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n                    credentials: \"same-origin\"\n                    }).then(function(response) {\n\n                    return response.text()\n                    }, function(error) {\n\n                    })\n\n\n            });\n    }\n\n  aboutSubmit = e => {\n    e.preventDefault();\n    var csrftoken= getCookie('csrftoken');\n        this.props.updateAboutUser(this.state.location,this.state.github,this.state.linkedin,\n          this.state.twitter_handle,this.state.bio,this.state.avi_path,csrftoken)\n        .then(this.props.fetchAboutUser()).then(window.location.reload(true))\n  }\n\n  componentDidMount(){\n      this.props.fetchAboutUser();\n    }\n\n  render () {\n      return (\n<div>\n        <form onSubmit={this.aboutSubmit}>\n         <div className=\"form-group\">\n          <input className=\"input-small\" onChange={e => this.setState({github: e.target.value})} placeholder=\"Github\" type=\"text\"/>\n          <input className=\"input-small \" onChange={e => this.setState({linkedin: e.target.value})} placeholder=\"LinkedIn\" type=\"text\"/>\n          <input className=\"input-small \" onChange={e => this.setState({twitter_handle: e.target.value})} placeholder=\"Twitter\" type=\"text\"/>\n         </div>\n         <input className=\"input-small\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n\n         <textarea onChange={e => this.setState({bio: e.target.value})} maxLength=\"500\" placeholder=\"Bio\"></textarea>\n         <button className = \"submit\">Submit</button>\n        </form>\n\n\n        <button onClick={this.uploadWidget.bind(this)} className=\"upload-button\">\n            Add Image\n        </button>\n\n</div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token:state.auth.token,\n  };\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location,github,linkedin,twitter_handle,bio,avi_path,csrftoken) => dispatch(aboutUser.updateAboutUser(location,github,linkedin,twitter_handle,bio,avi_path,csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser()),\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);\n"]},"metadata":{},"sourceType":"module"}