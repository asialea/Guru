{"ast":null,"code":"export const updateAboutUser = (location, github, linkedin, twitter_handle, bio, csrftoken) => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'USER_LOADING'\n    });\n    const token = getState().auth.token;\n    let body = JSON.stringify({\n      location,\n      github,\n      linkedin,\n      twitter_handle,\n      bio\n    });\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"/api/aboutUser/\", {\n      headers,\n      body,\n      method: \"PUT\",\n      mode: \"same-origin\"\n    }).then(res => res.json()).then(aboutUser => {\n      return dispatch({\n        type: 'UPDATE_ABOUTUSER',\n        aboutUser\n      });\n    });\n  };\n};\nexport const fetchAboutUser = () => {\n  return (dispatch, getState) => {\n    const token = getState().auth.token;\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"/api/aboutUser/\", {\n      headers,\n      method: \"GET\"\n    }).then(res => {\n      return res.json().then(data => {\n        dispatch({\n          type: 'FETCH_ABOUTUSER',\n          aboutUser: data\n        });\n      });\n      return data;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/actions/aboutUser.js"],"names":["updateAboutUser","location","github","linkedin","twitter_handle","bio","csrftoken","dispatch","getState","type","token","auth","body","JSON","stringify","headers","fetch","method","mode","then","res","json","aboutUser","fetchAboutUser","data"],"mappings":"AACA,OAAO,MAAMA,eAAe,GAAG,CAACC,QAAD,EAAUC,MAAV,EAAiBC,QAAjB,EAA0BC,cAA1B,EAAyCC,GAAzC,EAA6CC,SAA7C,KAA2D;AACxF,SAAM,CAACC,QAAD,EAAUC,QAAV,KAAuB;AAC3BD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,UAAMC,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B;AACA,QAAIE,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACb,MAAAA,QAAD;AAAUC,MAAAA,MAAV;AAAiBC,MAAAA,QAAjB;AAA0BC,MAAAA,cAA1B;AAAyCC,MAAAA;AAAzC,KAAf,CAAX;AACA,QAAIU,OAAO,GAAG;AACZ,gBAAU,kBADE;AAEZ,sBAAgB;AAFJ,KAAd;;AAKA,QAAIL,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAAC,eAAD,CAAP,mBAAoCL,KAApC;AACD;;AAED,WAAOM,KAAK,CAAC,iBAAD,EAAoB;AAACD,MAAAA,OAAD;AAASH,MAAAA,IAAT;AAAcK,MAAAA,MAAM,EAAC,KAArB;AAA2BC,MAAAA,IAAI,EAAC;AAAhC,KAApB,CAAL,CACJC,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,SAAS,IAAI;AACjB,aAAOf,QAAQ,CAAC;AACdE,QAAAA,IAAI,EAAE,kBADQ;AAEda,QAAAA;AAFc,OAAD,CAAf;AAIH,KAPM,CAAP;AAQD,GArBD;AAsBD,CAvBM;AA0BP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAM,CAAChB,QAAD,EAAUC,QAAV,KAAuB;AAC3B,UAAME,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B;AACA,QAAIK,OAAO,GAAG;AACZ,gBAAU,kBADE;AAEZ,sBAAgB;AAFJ,KAAd;;AAKA,QAAIL,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAAC,eAAD,CAAP,mBAAoCL,KAApC;AACD;;AAED,WAAOM,KAAK,oBAAoB;AAACD,MAAAA,OAAD;AAASE,MAAAA,MAAM,EAAC;AAAhB,KAApB,CAAL,CACNE,IADM,CACDC,GAAG,IAAI;AAAE,aAAOA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBK,IAAI,IAAE;AAACjB,QAAAA,QAAQ,CAAC;AAACE,UAAAA,IAAI,EAAC,iBAAN;AAAwBa,UAAAA,SAAS,EAACE;AAAlC,SAAD,CAAR;AAAkD,OAAzE,CAAP;AAAmF,aAAOA,IAAP;AACjG,KAFM,CAAP;AAGD,GAdD;AAeD,CAhBM","sourcesContent":["\nexport const updateAboutUser = (location,github,linkedin,twitter_handle,bio,csrftoken) => {\n  return(dispatch,getState) => {\n    dispatch({type: 'USER_LOADING'});\n    const token = getState().auth.token;\n    let body = JSON.stringify({location,github,linkedin,twitter_handle,bio});\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n    return fetch(\"/api/aboutUser/\", {headers,body,method:\"PUT\",mode:\"same-origin\"})\n      .then(res => res.json())\n      .then(aboutUser => {\n        return dispatch({\n          type: 'UPDATE_ABOUTUSER',\n          aboutUser\n        })\n    })\n  }\n}\n\n\nexport const fetchAboutUser = () => {\n  return(dispatch,getState) => {\n    const token = getState().auth.token;\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n       };\n\n    if (token) {\n      headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n    return fetch(`/api/aboutUser/`, {headers,method:\"GET\"})\n    .then(res => { return res.json().then(data=>{dispatch({type:'FETCH_ABOUTUSER',aboutUser:data})}); return data;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}