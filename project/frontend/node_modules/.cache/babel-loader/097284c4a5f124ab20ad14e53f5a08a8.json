{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/Experience.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getCookie } from './get_csrf';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaTimes, FaPlus } from 'react-icons/fa';\nimport { headers, token, csrftoken } from './global.js';\n\nclass Experience extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      company: \"\",\n      position: \"\",\n      location: \"\",\n      start: \"\",\n      end: null,\n      description: \"\",\n      work: [],\n      csrftoken: getCookie('csrftoken')\n    };\n\n    this.workSubmit = e => {\n      this.addWork(this.props.user.id, this.state.company, this.state.position, this.state.location, this.state.start, this.state.end, this.state.description);\n    };\n  }\n\n  addWork(user_id, company, position, location, start, end, description) {\n    let body = JSON.stringify({\n      user_id,\n      company,\n      position,\n      location,\n      start,\n      end,\n      description\n    });\n    fetch(\"api/work/\", {\n      headers,\n      body,\n      method: \"POST\"\n    }).then(res => {\n      return res.json();\n    }).catch(err => {\n      console.log(\"fetch error\" + err);\n    }).then(this.fetchWork());\n  }\n\n  fetchWork() {\n    fetch(\"/api/user-work/\".concat(this.props.user.username, \"/\")).then(response => {\n      return response.json();\n    }).then(responseData => {\n      return responseData;\n    }).then(json => this.setState({\n      work: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  deleteWork(id, event) {\n    let body = JSON.stringify({\n      id\n    });\n    fetch(\"api/work/\".concat(id, \"/\"), {\n      headers,\n      body,\n      method: \"DELETE\"\n    }).then(res => {\n      return res.json();\n    }).catch(err => {\n      console.log(\"fetch error\" + err);\n    }).then(this.fetchWork());\n    event.preventDefault();\n  }\n\n  componentWillMount() {\n    this.fetchWork();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"accordion btn-animated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Experience\", React.createElement(FaPlus, {\n      className: \"expand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.workSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        company: e.target.value\n      }),\n      placeholder: \"Company\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        position: e.target.value\n      }),\n      placeholder: \"Position\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-2\",\n      onChange: e => this.setState({\n        start: e.target.value\n      }),\n      id: \"start\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"to\"), React.createElement(\"input\", {\n      className: \"input-small group-2\",\n      onChange: e => this.setState({\n        end: e.target.value\n      }),\n      id: \"end\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      maxLength: \"300\",\n      placeholder: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.work.map(el => {\n      return React.createElement(\"div\", {\n        key: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"main res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, el.company, \", \"), React.createElement(\"span\", {\n        className: \"res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, el.location, \" -\"), React.createElement(\"span\", {\n        className: \"position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, el.position, \" \"), React.createElement(IconButton, {\n        className: \"delete\",\n        onClick: this.deleteWork.bind(this, el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(FaTimes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"date res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, el.start, \"-\", el.end), React.createElement(\"p\", {\n        className: \"desc res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, el.description));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(Experience);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/Experience.js"],"names":["React","Component","connect","getCookie","IconButton","FaTimes","FaPlus","headers","token","csrftoken","Experience","state","company","position","location","start","end","description","work","workSubmit","e","addWork","props","user","id","user_id","body","JSON","stringify","fetch","method","then","res","json","catch","err","console","log","fetchWork","username","response","responseData","setState","deleteWork","event","preventDefault","componentWillMount","render","target","value","map","el","bind","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {getCookie} from './get_csrf'\nimport IconButton from '@material-ui/core/IconButton';\nimport {FaTimes,FaPlus} from 'react-icons/fa';\nimport {headers,token,csrftoken} from './global.js'\n\n\nclass Experience extends Component{\n\n  state ={\n    company:\"\",\n    position:\"\",\n    location:\"\",\n    start:\"\",\n    end:null,\n    description:\"\",\n    work:[],\n    csrftoken:getCookie('csrftoken'),\n  }\n\n  workSubmit = e => {\n    this.addWork(this.props.user.id,this.state.company,this.state.position,this.state.location,\n      this.state.start, this.state.end, this.state.description)\n  }\n\naddWork(user_id,company,position,location,start,end,description){\n  let body = JSON.stringify({user_id,company,position,location,start,end,description});\n  fetch(`api/work/`,{headers,body,method:\"POST\",}).then(res => {return res.json();}).catch(err => {\n            console.log(\"fetch error\" + err)}).then(this.fetchWork());\n  }\n\n  fetchWork(){\n     fetch(`/api/user-work/${this.props.user.username}/`)\n       .then(response => { return response.json();}).then(responseData => {return responseData; })\n      .then (json =>this.setState({work: json})).catch(err => {\n            console.log(\"fetch error\" + err);\n        });\n  }\n\ndeleteWork(id,event){\n    let body = JSON.stringify({id});\n\n   fetch(`api/work/${id}/`, {headers,body,method:\"DELETE\"})\n    .then(res => {return res.json();}).catch(err => {\n              console.log(\"fetch error\" + err)}).then(this.fetchWork());\n    event.preventDefault();\n    }\n\n  componentWillMount(){\n    this.fetchWork();\n  }\n\n  render(){\n      return(\n      <div>\n      <button className=\"accordion btn-animated\"><h2>Experience<FaPlus className=\"expand\"/></h2></button>\n        <form className=\"form\" onSubmit={this.workSubmit}>\n         <div className=\"form-group\">\n          <input className=\"input-small group-1\" onChange={e => this.setState({company: e.target.value})} placeholder=\"Company\" type=\"text\"/>\n          <input className=\"input-small group-1\" onChange={e => this.setState({position: e.target.value})} placeholder=\"Position\" type=\"text\"/>\n          <input className=\"input-small group-1\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n          <input className=\"input-small group-2\" onChange={e => this.setState({start: e.target.value})} id=\"start\" type=\"date\"/>\n          <label>to</label>\n          <input className=\"input-small group-2\" onChange={e => this.setState({end: e.target.value})} id=\"end\" type=\"date\" />\n         </div>\n          <textarea onChange={e => this.setState({description: e.target.value})} maxLength=\"300\" placeholder=\"Description\"></textarea>\n          <button className = \"submit\">Submit</button>\n        </form>\n        <div>\n        {this.state.work.map(el => {\n              return <div key={el.id}>\n                   <h3 className=\"main res-item\">{el.company}, </h3><span className=\"res-item\">{el.location} -</span>\n                   <span className=\"position\">{el.position} </span>\n                   <IconButton className=\"delete\" onClick={this.deleteWork.bind(this, el.id)} ><FaTimes/></IconButton>\n                   <p className=\"date res-item\">{el.start}-{el.end}</p>\n                   <p className=\"desc res-item\">{el.description}</p>\n              </div>\n          })}\n       </div>\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n    }\n}\n\n\nexport default connect(mapStateToProps)(Experience);\n"]},"metadata":{},"sourceType":"module"}