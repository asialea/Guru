{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { aboutUser, auth } from \"../../actions\";\nimport '../static/AboutForm.css';\nimport { getCookie } from './get_csrf.js';\n\nclass AboutUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: this.props.aboutUser.location,\n      github: this.props.aboutUser.github,\n      linkedin: this.props.aboutUser.linkedin,\n      twitter_handle: this.props.aboutUser.twitter_handle,\n      bio: this.props.aboutUser.bio,\n      avi: {}\n    };\n\n    this.aboutSubmit = e => {\n      e.preventDefault();\n      var csrftoken = getCookie('csrftoken');\n      this.props.updateAboutUser(this.state.location, this.state.github, this.state.linkedin, this.state.twitter_handle, this.state.bio, this.state.avi_path, csrftoken).then(this.props.fetchAboutUser()).then(window.location.reload(true));\n    };\n  }\n\n  uploadWidget() {\n    var delete_data = {\n      'user_id': this.props.aboutUser.user_id\n    };\n    fetch(\"/api/avi/\".concat(this.props.aboutUser.user_id, \"/\"), {\n      method: 'POST',\n      body: JSON.stringify(delete_data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'X-CSRFToken': getCookie('csrftoken')\n      },\n      credentials: \"same-origin\"\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      return responseData;\n    }).then(json => this.setState({\n      avi: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n    window.cloudinary.openUploadWidget({\n      cloud_name: 'guruapp',\n      upload_preset: 'pro_pic',\n      api_key: '328295839766139',\n      unsigned: true,\n      public_id: this.props.aboutUser.user_id,\n      return_delete_token: true\n    }, function (error, result) {\n      console.log(result);\n      var data = {\n        'avi_path': result[0].url,\n        'user_id': result[0].public_id\n      };\n      fetch(\"/api/avi/\".concat(result[0].public_id), {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        credentials: \"same-origin\"\n      }).then(function (response) {\n        return response.text();\n      }, function (error) {});\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchAboutUser();\n    fetch(\"/api/avi/\".concat(this.props.aboutUser.user_id, \"/\")).then(response => {\n      return response.json();\n    }).then(responseData => {\n      return responseData;\n    }).then(json => this.setState({\n      avi: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.aboutSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        github: e.target.value\n      }),\n      placeholder: \"Github\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        linkedin: e.target.value\n      }),\n      placeholder: \"LinkedIn\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        twitter_handle: e.target.value\n      }),\n      placeholder: \"Twitter\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      maxLength: \"500\",\n      placeholder: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"button\", {\n      className: \"submit\",\n      onClick: this.uploadWidget.bind(this),\n      className: \"upload-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Update Profile Pic\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location, github, linkedin, twitter_handle, bio, avi_path, csrftoken) => dispatch(aboutUser.updateAboutUser(location, github, linkedin, twitter_handle, bio, avi_path, csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js"],"names":["React","Component","connect","aboutUser","auth","getCookie","AboutUser","state","location","props","github","linkedin","twitter_handle","bio","avi","aboutSubmit","e","preventDefault","csrftoken","updateAboutUser","avi_path","then","fetchAboutUser","window","reload","uploadWidget","delete_data","user_id","fetch","method","body","JSON","stringify","headers","credentials","response","json","responseData","setState","catch","err","console","log","cloudinary","openUploadWidget","cloud_name","upload_preset","api_key","unsigned","public_id","return_delete_token","error","result","data","url","text","componentDidMount","render","target","value","bind","mapStateToProps","user","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {aboutUser,auth} from \"../../actions\";\nimport '../static/AboutForm.css';\nimport {getCookie} from './get_csrf.js'\n\nclass AboutUser extends Component {\n  state = {\n    location:this.props.aboutUser.location,\n    github: this.props.aboutUser.github,\n    linkedin: this.props.aboutUser.linkedin,\n    twitter_handle:  this.props.aboutUser.twitter_handle,\n    bio: this.props.aboutUser.bio,\n    avi:{},\n  }\n\n  uploadWidget() {\n    var delete_data={'user_id':this.props.aboutUser.user_id}\n    fetch(`/api/avi/${this.props.aboutUser.user_id}/`,{method:'POST',body: JSON.stringify(delete_data),headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n    credentials: \"same-origin\"})\n      .then(response => { return response.json();}).then(responseData => {return responseData;})\n     .then (json =>this.setState({avi: json})).catch(err => {\n           console.log(\"fetch error\" + err);\n       });\n\n    window.cloudinary.openUploadWidget({ cloud_name: 'guruapp', upload_preset: 'pro_pic', api_key:'328295839766139',\n       unsigned: true, public_id:this.props.aboutUser.user_id,return_delete_token:true,},\n            function(error, result) {\n              console.log(result)\n              var data={'avi_path':result[0].url,'user_id':result[0].public_id,};\n              fetch(`/api/avi/${result[0].public_id}`, {method: \"PUT\",body: JSON.stringify(data),\n                    headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n                    credentials: \"same-origin\"\n                    }).then(function(response) {\n                    return response.text()\n                    }, function(error) {\n                })\n            });\n    }\n\n  aboutSubmit = e => {\n    e.preventDefault();\n    var csrftoken= getCookie('csrftoken');\n        this.props.updateAboutUser(this.state.location,this.state.github,this.state.linkedin,\n          this.state.twitter_handle,this.state.bio,this.state.avi_path,csrftoken)\n        .then(this.props.fetchAboutUser()).then(window.location.reload(true))\n  }\n\n  componentDidMount(){\n      this.props.fetchAboutUser();\n\n      fetch(`/api/avi/${this.props.aboutUser.user_id}/`)\n        .then(response => { return response.json();}).then(responseData => {return responseData;})\n       .then (json =>this.setState({avi: json})).catch(err => {\n             console.log(\"fetch error\" + err);\n         });\n    }\n\n  render () {\n      return (\n<div>\n        <form onSubmit={this.aboutSubmit}>\n         <div className=\"form-group\">\n          <input className=\"input-small\" onChange={e => this.setState({github: e.target.value})} placeholder=\"Github\" type=\"text\"/>\n          <input className=\"input-small \" onChange={e => this.setState({linkedin: e.target.value})} placeholder=\"LinkedIn\" type=\"text\"/>\n          <input className=\"input-small \" onChange={e => this.setState({twitter_handle: e.target.value})} placeholder=\"Twitter\" type=\"text\"/>\n         </div>\n         <input className=\"input-small\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n\n         <textarea onChange={e => this.setState({bio: e.target.value})} maxLength=\"500\" placeholder=\"Bio\"></textarea>\n         <button className = \"submit\">Submit</button>\n        </form>\n\n\n        <button className=\"submit\" onClick={this.uploadWidget.bind(this)} className=\"upload-button\">Update Profile Pic</button>\n\n</div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token:state.auth.token,\n  };\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location,github,linkedin,twitter_handle,bio,avi_path,csrftoken) => dispatch(aboutUser.updateAboutUser(location,github,linkedin,twitter_handle,bio,avi_path,csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser()),\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);\n"]},"metadata":{},"sourceType":"module"}