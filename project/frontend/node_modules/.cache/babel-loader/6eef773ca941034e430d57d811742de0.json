{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { aboutUser } from '../../actions';\nimport '../static/AboutForm.css';\nimport { headers, csrftoken, uploadConfig } from './global.js';\nimport { FaPlus } from 'react-icons/fa';\n\nclass AboutUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      aboutUser: {},\n      avi: {},\n      hidden: true\n    };\n\n    this.show = e => {\n      this.setState({\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.uploadWidget = e => {\n      //delete existing profile pic from cloud storage\n      var delete_data = {\n        'user_id': this.props.aboutUser.user_id\n      };\n      fetch(\"/api/avi/\".concat(this.props.aboutUser.user_id, \"/\"), {\n        method: 'POST',\n        body: JSON.stringify(delete_data),\n        headers\n      }).then(response => {\n        return response.json();\n      }).then(json => this.setState({\n        avi: json\n      })).catch(err => {\n        console.log(\"fetch error\" + err);\n      }); // set new profile pic\n\n      uploadConfig['public_id'] = this.props.aboutUser.user_id;\n      window.cloudinary.openUploadWidget(uploadConfig, function (error, result) {\n        if (result) {\n          var data = {\n            'avi_path': result[0].url,\n            'user_id': result[0].public_id\n          };\n          fetch(\"/api/avi/\".concat(result[0].public_id), {\n            method: \"PUT\",\n            body: JSON.stringify(data),\n            headers: headers\n          }).then(function (response) {\n            return response.text();\n          }, function (error) {\n            console.log(error);\n          });\n        }\n      });\n    };\n\n    this.aboutSave = e => {\n      this.fetchAvi();\n      var updatedUser = {\n        \"location\": this.state.location,\n        \"github\": this.state.github,\n        \"linkedin\": this.state.linkedin,\n        \"twitter_handle\": this.state.twitter_handle,\n        \"bio\": this.state.bio\n      };\n      this.updateAboutUser(updatedUser);\n      this.show();\n    };\n  }\n\n  updateAboutUser(user) {\n    let body = JSON.stringify(user);\n    fetch(\"/api/aboutUser/\", {\n      headers,\n      body,\n      method: \"PUT\",\n      mode: \"same-origin\"\n    }).then(res => res.json()).then(this.fetchAboutUser());\n  }\n\n  fetchAvi() {\n    fetch(\"/api/avi/\".concat(this.props.aboutUser.user_id, \"/\")).then(response => {\n      return response.json();\n    }).then(json => this.setState({\n      avi: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  fetchAboutUser() {\n    fetch(\"/api/aboutUser/\".concat(this.props.user.username, \"/\")).then(response => {\n      return response.json();\n    }).then(json => this.setState({\n      aboutUser: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  componentDidMount() {\n    this.fetchAvi();\n    this.fetchAboutUser();\n  }\n\n  handleChange(param, value) {\n    let updatedUser = this.state.aboutUser;\n    updatedUser[param] = value;\n    this.setState({\n      aboutUser: updatedUser\n    }, () => console.log(this.aboutUser));\n  }\n\n  render() {\n    var proPic = {\n      backgroundImage: 'url(' + this.state.avi.avi_path + ')'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"pro-pic\",\n      style: proPic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.show,\n      className: \"table accordion btn-animated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"About\", React.createElement(FaPlus, {\n      onClick: this.show,\n      className: \"about-expand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: this.state.hidden ? 'hidden' : 'form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.uploadWidget,\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Pro Pic\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.handleChange(\"github\", e.target.value),\n      placeholder: \"Github\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        linkedin: e.target.value\n      }),\n      placeholder: \"LinkedIn\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        twitter_handle: e.target.value\n      }),\n      placeholder: \"Twitter\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      maxLength: \"500\",\n      placeholder: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      onClick: this.aboutSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token: state.auth.token,\n    user: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location, github, linkedin, twitter_handle, bio, avi_path, csrftoken) => dispatch(aboutUser.updateAboutUser(location, github, linkedin, twitter_handle, bio, avi_path, csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js"],"names":["React","Component","connect","aboutUser","headers","csrftoken","uploadConfig","FaPlus","AboutUser","state","avi","hidden","show","e","setState","uploadWidget","delete_data","props","user_id","fetch","method","body","JSON","stringify","then","response","json","catch","err","console","log","window","cloudinary","openUploadWidget","error","result","data","url","public_id","text","aboutSave","fetchAvi","updatedUser","location","github","linkedin","twitter_handle","bio","updateAboutUser","user","mode","res","fetchAboutUser","username","componentDidMount","handleChange","param","value","render","proPic","backgroundImage","avi_path","target","mapStateToProps","token","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {aboutUser} from '../../actions'\nimport '../static/AboutForm.css';\nimport {headers,csrftoken,uploadConfig} from './global.js'\nimport {FaPlus} from 'react-icons/fa';\n\n\nclass AboutUser extends Component {\n\n  state = {\n    aboutUser:{},\n    avi:{},\n    hidden:true,\n  }\n\n  show = (e) =>{\n    this.setState({hidden:!this.state.hidden});\n  }\n\n  uploadWidget=(e)=> {\n    //delete existing profile pic from cloud storage\n    var delete_data={'user_id':this.props.aboutUser.user_id}\n\n    fetch(`/api/avi/${this.props.aboutUser.user_id}/`,{method:'POST',body: JSON.stringify(delete_data),headers,})\n      .then(response => { return response.json();}).then (json =>this.setState({avi: json}))\n      .catch(err => {console.log(\"fetch error\" + err);\n       });\n    // set new profile pic\n    uploadConfig['public_id']=this.props.aboutUser.user_id;\n    window.cloudinary.openUploadWidget(uploadConfig,function(error, result) {\n            if(result){\n              var data={'avi_path':result[0].url,'user_id':result[0].public_id,};\n              fetch(`/api/avi/${result[0].public_id}`, {method: \"PUT\",body: JSON.stringify(data),headers:headers})\n                .then(function(response) {\n                      return response.text()\n                    }, function(error) {\n                        console.log(error);})\n                    }\n                  });\n                }\n\n  updateAboutUser(user){\n    let body = JSON.stringify(user);\n    fetch(\"/api/aboutUser/\", {headers,body,method:\"PUT\",mode:\"same-origin\"})\n      .then(res => res.json()).then(this.fetchAboutUser())\n  }\n\n  aboutSave = e => {\n    this.fetchAvi()\n    var updatedUser = {\"location\":this.state.location,\"github\":this.state.github,\"linkedin\":this.state.linkedin\n    ,\"twitter_handle\":this.state.twitter_handle,\"bio\":this.state.bio}\n    this.updateAboutUser(updatedUser)\n    this.show();\n  }\n\n  fetchAvi(){\n    fetch(`/api/avi/${this.props.aboutUser.user_id}/`)\n      .then(response => { return response.json();}).then(json =>this.setState({avi: json}))\n      .catch(err => {console.log(\"fetch error\" + err);});\n            }\n\n  fetchAboutUser(){\n    fetch(`/api/aboutUser/${this.props.user.username}/`)\n      .then(response => { return response.json();}).then (json =>this.setState({aboutUser: json}))\n      .catch(err => {console.log(\"fetch error\" + err);})\n  }\n\n  componentDidMount(){\n      this.fetchAvi();\n      this.fetchAboutUser();\n    }\n\n  handleChange(param,value){\n    let updatedUser = this.state.aboutUser;\n    updatedUser[param]=value;\n    this.setState({aboutUser:updatedUser},()=>console.log(this.aboutUser))\n  }\n\n  render () {\n    var proPic = {backgroundImage:'url(' + this.state.avi.avi_path + ')'};\n      return (\n        <div>\n        <div className=\"flex-box\">\n          <div id=\"pro-pic\" style={proPic}></div>\n        </div>\n\n        <button onClick={this.show} className=\"table accordion btn-animated\"><h2>About<FaPlus onClick={this.show} className=\"about-expand\"/></h2></button>\n        <div className={this.state.hidden ? 'hidden':'form'}>\n        <button onClick={this.uploadWidget} className=\"submit\">Pro Pic</button>\n            <div>\n             <div className=\"form-group\">\n              <input className=\"input-small\" onChange={e => this.handleChange(\"github\",e.target.value)} placeholder=\"Github\" type=\"text\"/>\n              <input className=\"input-small \" onChange={e => this.setState({linkedin: e.target.value})} placeholder=\"LinkedIn\" type=\"text\"/>\n              <input className=\"input-small \" onChange={e => this.setState({twitter_handle: e.target.value})} placeholder=\"Twitter\" type=\"text\"/>\n             </div>\n             <input className=\"input-small\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n\n             <textarea onChange={e => this.setState({bio: e.target.value})} maxLength=\"500\" placeholder=\"Bio\"></textarea>\n             <button className =\"submit\" onClick={this.aboutSave}>Save</button>\n            </div>\n            </div>\n        </div>\n      );\n    }\n    }\n\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token:state.auth.token,\n    user: state.auth.user,\n  };\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location,github,linkedin,twitter_handle,bio,avi_path,csrftoken) => dispatch(aboutUser.updateAboutUser(location,github,linkedin,twitter_handle,bio,avi_path,csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser()),\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);\n"]},"metadata":{},"sourceType":"module"}