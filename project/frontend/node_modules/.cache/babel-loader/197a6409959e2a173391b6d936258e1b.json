{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/AboutForm.css';\nimport { getCookie } from './get_csrf.js';\nimport { headers, csrftoken, uploadConfig } from './global.js';\n\nclass AboutUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: this.props.aboutUser.location,\n      github: this.props.aboutUser.github,\n      linkedin: this.props.aboutUser.linkedin,\n      twitter_handle: this.props.aboutUser.twitter_handle,\n      bio: this.props.aboutUser.bio,\n      avi: {}\n    };\n\n    this.aboutSubmit = e => {\n      e.preventDefault();\n      this.props.updateAboutUser(this.state.location, this.state.github, this.state.linkedin, this.state.twitter_handle, this.state.bio, this.state.avi_path, csrftoken).then(this.props.fetchAboutUser()).then(window.location.reload(true));\n    };\n  }\n\n  uploadWidget() {\n    //delete existing profile pic from cloud storage\n    var delete_data = {\n      'user_id': this.props.aboutUser.user_id\n    };\n    fetch(\"/api/avi/\".concat(this.props.aboutUser.user_id, \"/\"), {\n      method: 'POST',\n      body: JSON.stringify(delete_data),\n      headers\n    }).then(response => {\n      return response.json();\n    }).then(json => this.setState({\n      avi: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n    uploadConfig['public_id'] = this.props.aboutUser.user_id;\n    window.cloudinary.openUploadWidget(uploadConfig, function (error, result) {\n      if (result) {\n        var data = {\n          'avi_path': result[0].url,\n          'user_id': result[0].public_id\n        };\n        fetch(\"/api/avi/\".concat(result[0].public_id), {\n          method: \"PUT\",\n          body: JSON.stringify(data),\n          headers: headers\n        }).then(function (response) {\n          return response.text();\n        }, function (error) {\n          console.log(error);\n        });\n      }\n    });\n  }\n\n  fetchAvi() {\n    fetch(\"/api/avi/\".concat(this.props.aboutUser.user_id, \"/\")).then(response => {\n      return response.json();\n    }).then(json => this.setState({\n      avi: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchAboutUser();\n    this.fetchAvi();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.uploadWidget.bind(this),\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Pro Pic\"), React.createElement(\"form\", {\n      onSubmit: this.aboutSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        github: e.target.value\n      }),\n      placeholder: \"Github\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        linkedin: e.target.value\n      }),\n      placeholder: \"LinkedIn\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        twitter_handle: e.target.value\n      }),\n      placeholder: \"Twitter\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      maxLength: \"500\",\n      placeholder: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location, github, linkedin, twitter_handle, bio, avi_path, csrftoken) => dispatch(aboutUser.updateAboutUser(location, github, linkedin, twitter_handle, bio, avi_path, csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js"],"names":["React","Component","connect","getCookie","headers","csrftoken","uploadConfig","AboutUser","state","location","props","aboutUser","github","linkedin","twitter_handle","bio","avi","aboutSubmit","e","preventDefault","updateAboutUser","avi_path","then","fetchAboutUser","window","reload","uploadWidget","delete_data","user_id","fetch","method","body","JSON","stringify","response","json","setState","catch","err","console","log","cloudinary","openUploadWidget","error","result","data","url","public_id","text","fetchAvi","componentDidMount","render","bind","target","value","mapStateToProps","user","token","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport '../static/AboutForm.css';\nimport {getCookie} from './get_csrf.js'\nimport {headers,csrftoken,uploadConfig} from './global.js'\n\n\nclass AboutUser extends Component {\n  state = {\n    location:this.props.aboutUser.location,\n    github: this.props.aboutUser.github,\n    linkedin: this.props.aboutUser.linkedin,\n    twitter_handle:  this.props.aboutUser.twitter_handle,\n    bio: this.props.aboutUser.bio,\n    avi:{},\n  }\n\n  uploadWidget() {\n    //delete existing profile pic from cloud storage\n    var delete_data={'user_id':this.props.aboutUser.user_id}\n\n    fetch(`/api/avi/${this.props.aboutUser.user_id}/`,{method:'POST',body: JSON.stringify(delete_data),headers,})\n      .then(response => { return response.json();}).then (json =>this.setState({avi: json}))\n      .catch(err => {console.log(\"fetch error\" + err);\n       });\n\n    uploadConfig['public_id']=this.props.aboutUser.user_id;\n    window.cloudinary.openUploadWidget(uploadConfig,function(error, result) {\n            if(result){\n              var data={'avi_path':result[0].url,'user_id':result[0].public_id,};\n              fetch(`/api/avi/${result[0].public_id}`, {method: \"PUT\",body: JSON.stringify(data),headers:headers})\n                .then(function(response) {\n                      return response.text()\n                    }, function(error) {\n                      console.log(error);})\n                    }\n                  });\n                }\n\n  aboutSubmit = e => {\n    e.preventDefault();\n        this.props.updateAboutUser(this.state.location,this.state.github,this.state.linkedin,\n          this.state.twitter_handle,this.state.bio,this.state.avi_path,csrftoken)\n          .then(this.props.fetchAboutUser()).then(window.location.reload(true))\n                     }\n\n  fetchAvi(){\n    fetch(`/api/avi/${this.props.aboutUser.user_id}/`)\n      .then(response => { return response.json();}).then(json =>this.setState({avi: json}))\n      .catch(err => {console.log(\"fetch error\" + err);});\n            }\n\n  componentDidMount(){\n      this.props.fetchAboutUser();\n      this.fetchAvi();\n    }\n\n  render () {\n      return (\n        <div>\n        <button onClick={this.uploadWidget.bind(this)} className=\"submit\">Pro Pic</button>\n            <form onSubmit={this.aboutSubmit}>\n             <div className=\"form-group\">\n              <input className=\"input-small\" onChange={e => this.setState({github: e.target.value})} placeholder=\"Github\" type=\"text\"/>\n              <input className=\"input-small \" onChange={e => this.setState({linkedin: e.target.value})} placeholder=\"LinkedIn\" type=\"text\"/>\n              <input className=\"input-small \" onChange={e => this.setState({twitter_handle: e.target.value})} placeholder=\"Twitter\" type=\"text\"/>\n             </div>\n             <input className=\"input-small\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n\n             <textarea onChange={e => this.setState({bio: e.target.value})} maxLength=\"500\" placeholder=\"Bio\"></textarea>\n             <button className = \"submit\">Submit</button>\n            </form>\n\n        </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token:state.auth.token,\n  };\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location,github,linkedin,twitter_handle,bio,avi_path,csrftoken) => dispatch(aboutUser.updateAboutUser(location,github,linkedin,twitter_handle,bio,avi_path,csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser()),\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);\n"]},"metadata":{},"sourceType":"module"}