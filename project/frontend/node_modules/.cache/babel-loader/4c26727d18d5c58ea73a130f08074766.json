{"ast":null,"code":"export const addInterest = (user_id, interest, csrftoken) => {\n  return (dispatch, getState) => {\n    const token = getState().auth.token;\n    let body = JSON.stringify({\n      user_id,\n      interest\n    });\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrftoken\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"/api/interests/\", {\n      headers,\n      body,\n      method: \"POST\",\n      mode: \"same-origin\"\n    }).then(res => {\n      if (res.status < 500) {\n        return res.json().then(data => {\n          return {\n            status: res.status,\n            data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(res => {\n      if (res.status === 201) {\n        return dispatch({\n          type: 'ADD_INTEREST',\n          note: res.data\n        });\n      } else if (res.status === 401 || res.status === 403) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};\nexport const fetchInterests = () => {\n  return (dispatch, getState) => {\n    const token = getState().auth.token;\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"/api/interests/\", {\n      headers,\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }).then(interests => {\n      return dispatch({\n        type: 'FETCH_INTERESTS',\n        interests\n      });\n    });\n  };\n};\nexport const deleteInterest = (id, csrftoken) => {\n  return (dispatch, getState) => {\n    const token = getState().auth.token;\n    let headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrftoken\n    };\n    let body = JSON.stringify({\n      id\n    });\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(\"/api/interests/\".concat(id, \"/\"), {\n      headers,\n      body,\n      method: \"DELETE\"\n    }).then(res => {\n      if (res.status === 204) {\n        return {\n          status: res.status,\n          data: {}\n        };\n      } else if (res.status < 500) {\n        return res.json().then(data => {\n          return {\n            status: res.status,\n            data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(res => {\n      if (res.status === 204) {\n        return dispatch({\n          type: 'DELETE_INTEREST',\n          id\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/actions/interests.js"],"names":["addInterest","user_id","interest","csrftoken","dispatch","getState","token","auth","body","JSON","stringify","headers","fetch","method","mode","then","res","status","json","data","console","log","type","note","fetchInterests","interests","deleteInterest","id"],"mappings":"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","sourcesContent":["export const addInterest= (user_id,interest,csrftoken) => {\n  return(dispatch,getState) => {\n    const token = getState().auth.token;\n    let body = JSON.stringify({user_id,interest});\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrftoken,\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n    return fetch(\"/api/interests/\", {headers,body,method:\"POST\",mode:\"same-origin\"})\n    .then(res => {\n              if (res.status < 500) {\n                  return res.json().then(data => {\n                      return {status: res.status, data};\n                  })\n              } else {\n                  console.log(\"Server Error!\");\n                  throw res;\n              }\n          })\n          .then(res => {\n              if (res.status === 201) {\n                  return dispatch({type: 'ADD_INTEREST', note: res.data});\n              } else if (res.status === 401 || res.status === 403) {\n                  dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                  throw res.data;\n              }\n          })\n  }\n}\n\nexport const fetchInterests = () => {\n  return(dispatch,getState) => {\n    const token = getState().auth.token;\n    let headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n       };\n\n    if (token) {\n      headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n    return fetch(`/api/interests/`, {headers,method:\"GET\"})\n    .then(res => { return res.json();})\n    .then(interests=>{return dispatch({type:'FETCH_INTERESTS',interests})\n    })\n  }\n}\n\n\nexport const deleteInterest = (id,csrftoken) => {\n  return(dispatch,getState) => {\n    const token = getState().auth.token;\n    let headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrftoken,\n    };\n    let body = JSON.stringify({id});\n\n    if (token) {\n      headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n    return fetch(`/api/interests/${id}/`, {headers,body,method:\"DELETE\"})\n    .then(res => {\n              if (res.status === 204) {\n                  return {status: res.status, data: {}};\n              } else if (res.status < 500) {\n                  return res.json().then(data => {\n                      return {status: res.status, data};\n                  })\n              } else {\n                  console.log(\"Server Error!\");\n                  throw res;\n              }\n          })\n          .then(res => {\n              if (res.status === 204) {\n                  return dispatch({type: 'DELETE_INTEREST', id});\n              }\n          })\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}