{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { aboutUser, auth } from \"../../actions\";\nimport '../static/AboutForm.css';\nimport { getCookie } from './get_csrf.js';\n\nclass AboutUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: this.props.aboutUser.location,\n      github: this.props.aboutUser.github,\n      linkedin: this.props.aboutUser.linkedin,\n      twitter_handle: this.props.aboutUser.twitter_handle,\n      bio: this.props.aboutUser.bio,\n      avi_path: this.props.aboutUser.avi_path //\n      // uploadWidget() {\n      //       window.cloudinary.openUploadWidget({ cloud_name: 'guruapp', upload_preset: 'pro_pic', api_key:'328295839766139',\n      //      unsigned: true, public_id:this.props.aboutUser.user_id},\n      //           function(error, result) {\n      //\n      //               var data={'avi_path':result[0].url,'user_id':result[0].public_id};\n      //             fetch(`/api/avi/`, {method: \"PUT\",body: JSON.stringify(data),\n      //                   headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n      //                   credentials: \"same-origin\"\n      //                   }).then(function(response) {\n      //\n      //                   return response.text()\n      //                   }, function(error) {\n      //\n      //                   })\n      //\n      //\n      //           });\n      //   }\n\n    };\n\n    this.aboutSubmit = e => {\n      e.preventDefault();\n      var csrftoken = getCookie('csrftoken');\n      this.props.updateAboutUser(this.state.location, this.state.github, this.state.linkedin, this.state.twitter_handle, this.state.bio, this.state.avi_path, csrftoken).then(this.props.fetchAboutUser()).then(window.location.reload(true));\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAboutUser();\n\n    this.uploadWidget = () => {\n      window.cloudinary.openUploadWidget({\n        cloud_name: 'guruapp',\n        upload_preset: 'pro_pic',\n        api_key: '328295839766139',\n        unsigned: true,\n        public_id: this.props.aboutUser.user_id\n      }, function (error, result) {\n        this.setState({\n          avi_path: result\n        }); //   var data={'avi_path':result[0].url,'user_id':result[0].public_id};\n        // fetch(`/api/avi/`, {method: \"PUT\",body: JSON.stringify(data),\n        //       headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n        //       credentials: \"same-origin\"\n        //       }).then(function(response) {\n        //\n        //       return response.text()\n        //       }, function(error) {\n        //\n        //       })\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.aboutSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        github: e.target.value\n      }),\n      placeholder: \"Github\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        linkedin: e.target.value\n      }),\n      placeholder: \"LinkedIn\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small \",\n      onChange: e => this.setState({\n        twitter_handle: e.target.value\n      }),\n      placeholder: \"Twitter\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"input-small\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      maxLength: \"500\",\n      placeholder: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"button\", {\n      onClick: () => this.uploadWidget(),\n      className: \"upload-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Add Image\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location, github, linkedin, twitter_handle, bio, avi_path, csrftoken) => dispatch(aboutUser.updateAboutUser(location, github, linkedin, twitter_handle, bio, avi_path, csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/AboutUser.js"],"names":["React","Component","connect","aboutUser","auth","getCookie","AboutUser","state","location","props","github","linkedin","twitter_handle","bio","avi_path","aboutSubmit","e","preventDefault","csrftoken","updateAboutUser","then","fetchAboutUser","window","reload","componentDidMount","uploadWidget","cloudinary","openUploadWidget","cloud_name","upload_preset","api_key","unsigned","public_id","user_id","error","result","setState","render","target","value","mapStateToProps","user","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {aboutUser,auth} from \"../../actions\";\nimport '../static/AboutForm.css';\nimport {getCookie} from './get_csrf.js'\n\nclass AboutUser extends Component {\n  state = {\n    location:this.props.aboutUser.location,\n    github: this.props.aboutUser.github,\n    linkedin: this.props.aboutUser.linkedin,\n    twitter_handle:  this.props.aboutUser.twitter_handle,\n    bio: this.props.aboutUser.bio,\n    avi_path:this.props.aboutUser.avi_path,\n  }\n  //\n  // uploadWidget() {\n  //       window.cloudinary.openUploadWidget({ cloud_name: 'guruapp', upload_preset: 'pro_pic', api_key:'328295839766139',\n  //      unsigned: true, public_id:this.props.aboutUser.user_id},\n  //           function(error, result) {\n  //\n  //               var data={'avi_path':result[0].url,'user_id':result[0].public_id};\n  //             fetch(`/api/avi/`, {method: \"PUT\",body: JSON.stringify(data),\n  //                   headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n  //                   credentials: \"same-origin\"\n  //                   }).then(function(response) {\n  //\n  //                   return response.text()\n  //                   }, function(error) {\n  //\n  //                   })\n  //\n  //\n  //           });\n  //   }\n\n  aboutSubmit = e => {\n    e.preventDefault();\n    var csrftoken= getCookie('csrftoken');\n        this.props.updateAboutUser(this.state.location,this.state.github,this.state.linkedin,\n          this.state.twitter_handle,this.state.bio,this.state.avi_path,csrftoken)\n        .then(this.props.fetchAboutUser()).then(window.location.reload(true))\n  }\n\n  componentDidMount(){\n      this.props.fetchAboutUser();\n\n\n\n        this.uploadWidget=()=>{\n              window.cloudinary.openUploadWidget({ cloud_name: 'guruapp', upload_preset: 'pro_pic', api_key:'328295839766139',\n             unsigned: true, public_id:this.props.aboutUser.user_id},\n                  function(error, result) {\n\n                    this.setState({avi_path:result});\n\n                    //   var data={'avi_path':result[0].url,'user_id':result[0].public_id};\n                    // fetch(`/api/avi/`, {method: \"PUT\",body: JSON.stringify(data),\n                    //       headers: {\"Content-Type\": \"application/json\",'X-CSRFToken':getCookie('csrftoken')},\n                    //       credentials: \"same-origin\"\n                    //       }).then(function(response) {\n                    //\n                    //       return response.text()\n                    //       }, function(error) {\n                    //\n                    //       })\n\n\n                  });\n          }\n    }\n\n  render () {\n      return (\n<div>\n        <form onSubmit={this.aboutSubmit}>\n         <div className=\"form-group\">\n          <input className=\"input-small\" onChange={e => this.setState({github: e.target.value})} placeholder=\"Github\" type=\"text\"/>\n          <input className=\"input-small \" onChange={e => this.setState({linkedin: e.target.value})} placeholder=\"LinkedIn\" type=\"text\"/>\n          <input className=\"input-small \" onChange={e => this.setState({twitter_handle: e.target.value})} placeholder=\"Twitter\" type=\"text\"/>\n         </div>\n         <input className=\"input-small\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n\n         <textarea onChange={e => this.setState({bio: e.target.value})} maxLength=\"500\" placeholder=\"Bio\"></textarea>\n         <button className = \"submit\">Submit</button>\n        </form>\n\n\n        <button onClick={()=>this.uploadWidget()} className=\"upload-button\">\n            Add Image\n        </button>\n\n</div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    aboutUser: state.aboutUser.user,\n    token:state.auth.token,\n  };\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAboutUser: (location,github,linkedin,twitter_handle,bio,avi_path,csrftoken) => dispatch(aboutUser.updateAboutUser(location,github,linkedin,twitter_handle,bio,avi_path,csrftoken)),\n    fetchAboutUser: () => dispatch(aboutUser.fetchAboutUser()),\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutUser);\n"]},"metadata":{},"sourceType":"module"}