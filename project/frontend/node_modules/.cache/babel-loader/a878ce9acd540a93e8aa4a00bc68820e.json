{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/views/Comment.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/Home.css';\nimport Comments from './Comments';\nimport '../static/Forum.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { headers } from '../forms/global.js';\nimport { Link } from 'react-router-dom';\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      meta: {},\n      hidden: true // <TextareaAutosize id=\"new-post\" onChange={e => this.setState({reply: e.target.value})} maxLength=\"500\" minRows={1} maxRows={6}\n      //  placeholder=\"Reply\"/>\n      // <p onClick={e =>this.submitReply(comment.id)} className=\"\">Reply</p>  ${meta[comment.user_id]['avi_path']}\n\n    };\n\n    this.show = e => {\n      this.setState({\n        hidden: !this.state.hidden\n      });\n    };\n  }\n\n  render() {\n    var comment = this.props.comment;\n    var meta = this.props.meta;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-avi\",\n      style: meta ? {\n        backgroundImage: \"url(\".concat(meta[comment.user_id]['avi_path'], \")\")\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" \", React.createElement(Link, {\n      to: \"/about/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"@\", meta ? meta[comment.user_id]['username'] : \"\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, comment.text), React.createElement(\"p\", {\n      onClick: e => this.submitReply(comment.id),\n      className: \"reply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"p\", {\n      className: \"view-replies\",\n      onClick: this.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, comment.replies ? \"View \" + comment.replies.length + \" replies\" : \"\"))), React.createElement(\"div\", {\n      className: this.state.hidden ? \"hidden\" : \"replies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Comments, {\n      meta: meta,\n      comments: comment.replies ? comment.replies : [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/views/Comment.js"],"names":["React","Component","connect","Comments","TextareaAutosize","headers","Link","Comment","state","meta","hidden","show","e","setState","render","comment","props","backgroundImage","user_id","text","submitReply","id","replies","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,qBAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAA+B;AAAA;AAAA;AAAA,SAE7BO,KAF6B,GAErB;AACNC,MAAAA,IAAI,EAAC,EADC;AAENC,MAAAA,MAAM,EAAC,IAFD,CAKR;AACA;AACA;;AAPQ,KAFqB;;AAAA,SAU7BC,IAV6B,GAUrBC,CAAD,IAAM;AACX,WAAKC,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAC,CAAC,KAAKF,KAAL,CAAWE;AAApB,OAAd;AACD,KAZ4B;AAAA;;AAc7BI,EAAAA,MAAM,GAAE;AACL,QAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAzB;AACA,QAAIN,IAAI,GAAG,KAAKO,KAAL,CAAWP,IAAtB;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAIA,IAAI,GAAG;AAACQ,QAAAA,eAAe,gBAASR,IAAI,CAACM,OAAO,CAACG,OAAT,CAAJ,CAAsB,UAAtB,CAAT;AAAhB,OAAH,GAAoE,EAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,EAEM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuBT,IAAI,GAAGA,IAAI,CAACM,OAAO,CAACG,OAAT,CAAJ,CAAsB,UAAtB,CAAH,GAAqC,EAAhE,CAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,OAAO,CAACI,IAAZ,CAFF,EAGE;AAAG,MAAA,OAAO,EAAEP,CAAC,IAAG,KAAKQ,WAAL,CAAiBL,OAAO,CAACM,EAAzB,CAAhB;AAA8C,MAAA,SAAS,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,OAAO,EAAE,KAAKV,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDI,OAAO,CAACO,OAAR,GAAkB,UAAQP,OAAO,CAACO,OAAR,CAAgBC,MAAxB,GAAiC,UAAnD,GAAgE,EAAjH,CAJF,CAFN,CADA,EAUA;AAAK,MAAA,SAAS,EAAE,KAAKf,KAAL,CAAWE,MAAX,GAAoB,QAApB,GAA+B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAhB;AAAsB,MAAA,QAAQ,EAAEM,OAAO,CAACO,OAAR,GAAkBP,OAAO,CAACO,OAA1B,GAAoC,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVA,CADF;AAiBD;;AAlC4B;;AAwC/B,eAAgBf,OAAhB","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport '../static/Home.css';\nimport Comments from './Comments';\nimport '../static/Forum.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport {headers} from '../forms/global.js'\nimport {Link} from 'react-router-dom';\n\nclass Comment extends Component{\n\n  state = {\n    meta:{},\n    hidden:true,\n  }\n\n  // <TextareaAutosize id=\"new-post\" onChange={e => this.setState({reply: e.target.value})} maxLength=\"500\" minRows={1} maxRows={6}\n  //  placeholder=\"Reply\"/>\n  // <p onClick={e =>this.submitReply(comment.id)} className=\"\">Reply</p>  ${meta[comment.user_id]['avi_path']}\n  show = (e) =>{\n    this.setState({hidden:!this.state.hidden})\n  }\n\n  render(){\n     var comment = this.props.comment;\n     var meta = this.props.meta;\n    return(\n      <div>\n      <div className=\"post\" >\n            <div className=\"post-avi\" style = {meta ? {backgroundImage: `url(${meta[comment.user_id]['avi_path']})`} : {}}></div>\n            <div className=\"text\">\n              <p> <Link to={\"/about/\"}>@{meta ? meta[comment.user_id]['username']:\"\"}</Link></p>\n              <p>{comment.text}</p>\n              <p onClick={e =>this.submitReply(comment.id)} className=\"reply\">Reply</p>\n              <p className=\"view-replies\" onClick={this.show}>{comment.replies ? \"View \"+comment.replies.length + \" replies\" : \"\"}</p>\n            </div>\n      </div>\n      <div className={this.state.hidden ? \"hidden\" : \"replies\"}>\n        <Comments meta={meta} comments={comment.replies ? comment.replies : []} />\n      </div>\n      </div>\n\n    )\n  }\n}\n\n\n\n\nexport default (Comment);\n"]},"metadata":{},"sourceType":"module"}