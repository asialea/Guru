{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/views/Home.js\";\nimport React, { Component } from 'react';\nimport '../static/Home.css';\nimport Register from '../forms/Register';\nimport Login from '../forms/Login';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { auth } from \"../../actions\";\nimport head from \"./head-color.svg\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.login(this.state.username, this.state.password);\n    };\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      id: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header header-fill header-fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nav-item no-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: head,\n      alt: \"lotus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), \"Guru\"))), React.createElement(\"div\", {\n      class: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"dropbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"MENU\"), React.createElement(\"div\", {\n      class: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"user-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Register, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  let errors = [];\n\n  if (state.auth.login_errors) {\n    errors = Object.keys(state.auth.login_errors).map(field => {\n      return {\n        field,\n        message: state.auth.login_errors[field]\n      };\n    });\n  }\n\n  return {\n    errors,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => {\n      return dispatch(auth.login(username, password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/views/Home.js"],"names":["React","Component","Register","Login","Redirect","connect","auth","Home","state","username","password","onSubmit","e","preventDefault","props","login","render","isAuthenticated","head","children","mapStateToProps","errors","login_errors","Object","keys","map","field","message","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../static/Home.css';\nimport Register from '../forms/Register';\nimport Login from '../forms/Login';\n\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {auth} from \"../../actions\";\nimport head from './head-color.svg'\n\nclass Home extends Component {\n\n  state = {\n   username: \"\",\n   password: \"\",\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n  }\n\n\n  render () {\n\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/about\" />;\n    }\n\n  return (\n    <div id=\"home\">\n\n      <div className=\"header header-fill header-fixed\">\n        <div className=\"header-brand\">\n          <div className=\"nav-item no-hover\">\n              <h1 className=\"title\"><img className=\"logo\" src={head} alt=\"lotus\"/>Guru</h1>\n          </div>\n        </div>\n\n\n        <div class=\"dropdown\">\n        <button class=\"dropbtn\">MENU</button>\n        <div class=\"dropdown-content\">\n            <Login/>\n        </div>\n      </div>\n      </div>\n\n        <div id = \"user-div\">\n          <Register/>\n        </div>\n      <div>{this.props.children}</div>\n    </div>\n\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  let errors = [];\n  if (state.auth.login_errors) {\n    errors = Object.keys(state.auth.login_errors).map(field => {\n      return {field, message: state.auth.login_errors[field]};\n    });\n  }\n  return {\n    errors,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => {\n      return dispatch(auth.login(username, password));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}