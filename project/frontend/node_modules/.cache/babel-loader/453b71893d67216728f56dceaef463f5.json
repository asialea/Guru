{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/Experience.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { work } from \"../../actions\";\nimport { getCookie } from './get_csrf';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaTimes, FaPlus } from 'react-icons/fa';\n\nclass Experience extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      company: \"\",\n      position: \"\",\n      location: \"\",\n      start: \"\",\n      end: null,\n      description: \"\",\n      work: [],\n      csrftoken: getCookie('csrftoken')\n    };\n\n    this.workSubmit = e => {\n      this.addWork(this.props.user.id, this.state.company, this.state.position, this.state.location, this.state.start, this.state.end, this.state.description);\n    };\n  }\n\n  addWork(user_id, company, position, location, start, end, description) {\n    const token = localStorage.getItem(\"token\");\n    let body = JSON.stringify({\n      user_id,\n      company,\n      position,\n      location,\n      start,\n      end,\n      description\n    });\n    let headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': this.state.csrftoken\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    fetch(\"api/work/\", {\n      headers,\n      body,\n      method: \"POST\"\n    }).then(res => {\n      return res.json();\n    }).catch(err => {\n      console.log(\"fetch error\" + err);\n    }).then(this.fetchWork());\n  }\n\n  fetchWork() {\n    fetch(\"/api/user-work/\".concat(this.props.user.username, \"/\")).then(response => {\n      return response.json();\n    }).then(responseData => {\n      return responseData;\n    }).then(json => this.setState({\n      work: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  deleteWork(id, event) {\n    const token = localStorage.getItem(\"token\");\n    let headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': this.state.csrftoken\n    };\n    let body = JSON.stringify({\n      id\n    });\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    fetch(\"api/work/\".concat(id, \"/\"), {\n      headers,\n      body,\n      method: \"DELETE\"\n    }).then(res => {\n      return res.json();\n    }).catch(err => {\n      console.log(\"fetch error\" + err);\n    }).then(this.fetchWork());\n    event.preventDefault();\n  }\n\n  componentWillMount() {\n    this.fetchWork();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"accordion btn-animated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Experience\", React.createElement(FaPlus, {\n      className: \"expand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.workSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        company: e.target.value\n      }),\n      placeholder: \"Company\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        position: e.target.value\n      }),\n      placeholder: \"Position\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-2\",\n      onChange: e => this.setState({\n        start: e.target.value\n      }),\n      id: \"start\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"to\"), React.createElement(\"input\", {\n      className: \"input-small group-2\",\n      onChange: e => this.setState({\n        end: e.target.value\n      }),\n      id: \"end\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      maxLength: \"300\",\n      placeholder: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.work.map(el => {\n      return React.createElement(\"div\", {\n        key: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"main res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, el.company, \", \"), React.createElement(\"span\", {\n        className: \"res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, el.location, \" -\"), React.createElement(\"span\", {\n        className: \"position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, el.position, \" \"), React.createElement(IconButton, {\n        className: \"delete\",\n        onClick: this.deleteWork.bind(this, el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(FaTimes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"date res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, el.start, \"-\", el.end), React.createElement(\"p\", {\n        className: \"desc res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, el.description));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteWork: id => dispatch(work.deleteWork(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Experience);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/Experience.js"],"names":["React","Component","connect","work","getCookie","IconButton","FaTimes","FaPlus","Experience","state","company","position","location","start","end","description","csrftoken","workSubmit","e","addWork","props","user","id","user_id","token","localStorage","getItem","body","JSON","stringify","headers","fetch","method","then","res","json","catch","err","console","log","fetchWork","username","response","responseData","setState","deleteWork","event","preventDefault","componentWillMount","render","target","value","map","el","bind","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {work} from \"../../actions\";\nimport {getCookie} from './get_csrf'\nimport IconButton from '@material-ui/core/IconButton';\nimport {FaTimes,FaPlus} from 'react-icons/fa';\n\n\nclass Experience extends Component{\n\n  state ={\n    company:\"\",\n    position:\"\",\n    location:\"\",\n    start:\"\",\n    end:null,\n    description:\"\",\n    work:[],\n    csrftoken:getCookie('csrftoken'),\n  }\n\n  workSubmit = e => {\n    this.addWork(this.props.user.id,this.state.company,this.state.position,this.state.location,this.state.start, this.state.end, this.state.description)\n  }\n\naddWork(user_id,company,position,location,start,end,description){\n  const token = localStorage.getItem(\"token\");\n  let body = JSON.stringify({user_id,company,position,location,start,end,description});\n  let headers = {\n    'Content-Type': 'application/json',\n    'X-CSRFToken': this.state.csrftoken,\n  };\n  if (token) {\n    headers[\"Authorization\"] = `Token ${token}`;\n  }\n  fetch(`api/work/`,{headers,body,method:\"POST\",}).then(res => {return res.json();}).catch(err => {\n            console.log(\"fetch error\" + err)}).then(this.fetchWork());\n  }\n\n  fetchWork(){\n         fetch(`/api/user-work/${this.props.user.username}/`)\n           .then(response => { return response.json();}).then(responseData => {return responseData; })\n          .then (json =>this.setState({work: json})).catch(err => {\n                console.log(\"fetch error\" + err);\n            });\n  }\n\ndeleteWork(id,event){\n  const token = localStorage.getItem(\"token\");\n      let headers = {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': this.state.csrftoken,\n      };\n      let body = JSON.stringify({id});\n\n      if (token) {\n        headers[\"Authorization\"] = `Token ${token}`;\n      }\n\n     fetch(`api/work/${id}/`, {headers,body,method:\"DELETE\"})\n      .then(res => {return res.json();}).catch(err => {\n                console.log(\"fetch error\" + err)}).then(this.fetchWork());\n      event.preventDefault();\n    }\n\n  componentWillMount(){\n    this.fetchWork();\n  }\n\n  render(){\n      return(\n      <div>\n      <button className=\"accordion btn-animated\"><h2>Experience<FaPlus className=\"expand\"/></h2></button>\n        <form className=\"form\" onSubmit={this.workSubmit}>\n         <div className=\"form-group\">\n          <input className=\"input-small group-1\" onChange={e => this.setState({company: e.target.value})} placeholder=\"Company\" type=\"text\"/>\n          <input className=\"input-small group-1\" onChange={e => this.setState({position: e.target.value})} placeholder=\"Position\" type=\"text\"/>\n          <input className=\"input-small group-1\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n          <input className=\"input-small group-2\" onChange={e => this.setState({start: e.target.value})} id=\"start\" type=\"date\"/>\n          <label>to</label>\n          <input className=\"input-small group-2\" onChange={e => this.setState({end: e.target.value})} id=\"end\" type=\"date\" />\n         </div>\n          <textarea onChange={e => this.setState({description: e.target.value})} maxLength=\"300\" placeholder=\"Description\"></textarea>\n          <button className = \"submit\">Submit</button>\n        </form>\n        <div>\n        {this.state.work.map(el => {\n              return <div key={el.id}>\n                   <h3 className=\"main res-item\">{el.company}, </h3><span className=\"res-item\">{el.location} -</span>\n                   <span className=\"position\">{el.position} </span>\n                   <IconButton className=\"delete\" onClick={this.deleteWork.bind(this, el.id)} ><FaTimes/></IconButton>\n                   <p className=\"date res-item\">{el.start}-{el.end}</p>\n                   <p className=\"desc res-item\">{el.description}</p>\n              </div>\n          })}\n       </div>\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteWork: (id) => dispatch(work.deleteWork(id)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Experience);\n"]},"metadata":{},"sourceType":"module"}