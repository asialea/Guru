{"ast":null,"code":"var _jsxFileName = \"/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/Experience.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { work } from \"../../actions\";\nimport { getCookie } from './get_csrf';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaTimes, FaPlus } from 'react-icons/fa';\n\nclass Experience extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      company: \"\",\n      position: \"\",\n      location: \"\",\n      start: \"\",\n      end: null,\n      description: \"\",\n      work: [],\n      csrftoken: getCookie('csrftoken')\n    };\n\n    this.workSubmit = e => {\n      e.preventDefault();\n      var csrftoken = getCookie('csrftoken');\n      this.props.addWork(this.props.user.id, this.state.company, this.state.position, this.state.location, this.state.start, this.state.end, this.state.description, csrftoken);\n      setTimeout(function () {\n        window.location.reload();\n      }, 10);\n    };\n  }\n\n  addWork(user_id, company, position, location, start, end, description) {\n    return (dispatch, getState) => {\n      const token = getState().auth.token;\n      let body = JSON.stringify({\n        user_id,\n        company,\n        position,\n        location,\n        start,\n        end,\n        description\n      });\n      let headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      };\n\n      if (token) {\n        headers[\"Authorization\"] = \"Token \".concat(token);\n      }\n\n      return fetch(\"/api/work/\", {\n        headers,\n        body,\n        method: \"POST\",\n        mode: \"same-origin\"\n      }).then(res => {\n        if (res.status < 500) {\n          return res.json().then(data => {\n            return {\n              status: res.status,\n              data\n            };\n          });\n        } else {\n          console.log(\"Server Error!\");\n          throw res;\n        }\n      }).then(res => {\n        if (res.status === 201) {\n          return dispatch({\n            type: 'ADD_WORK',\n            note: res.data\n          });\n        } else if (res.status === 401 || res.status === 403) {\n          dispatch({\n            type: \"AUTHENTICATION_ERROR\",\n            data: res.data\n          });\n          throw res.data;\n        }\n      });\n    };\n  }\n\n  fetchWork() {\n    fetch(\"/api/user-work/\".concat(this.props.user.username, \"/\")).then(response => {\n      return response.json();\n    }).then(responseData => {\n      return responseData;\n    }).then(json => this.setState({\n      work: json\n    })).catch(err => {\n      console.log(\"fetch error\" + err);\n    });\n  }\n\n  componentWillMount() {\n    this.fetchWork();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"accordion btn-animated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Experience\", React.createElement(FaPlus, {\n      className: \"expand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.workSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        company: e.target.value\n      }),\n      placeholder: \"Company\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        position: e.target.value\n      }),\n      placeholder: \"Position\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-1\",\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      placeholder: \"Location\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input-small group-2\",\n      onChange: e => this.setState({\n        start: e.target.value\n      }),\n      id: \"start\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"to\"), React.createElement(\"input\", {\n      className: \"input-small group-2\",\n      onChange: e => this.setState({\n        end: e.target.value\n      }),\n      id: \"end\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      maxLength: \"300\",\n      placeholder: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.work.map(el => {\n      return React.createElement(\"div\", {\n        key: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"main res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, el.company, \", \"), React.createElement(\"span\", {\n        className: \"res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, el.location, \" -\"), React.createElement(\"span\", {\n        className: \"position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, el.position, \" \"), React.createElement(IconButton, {\n        className: \"delete\",\n        onClick: () => this.props.deleteWork(el.id, this.state.csrftoken).then(this.fetchWork()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(FaTimes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"date res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, el.start, \"-\", el.end), React.createElement(\"p\", {\n        className: \"desc res-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, el.description));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteWork: id => dispatch(work.deleteWork(id)),\n    addWork: (user_id, company, position, location, start, end, description, csrftoken) => dispatch(work.addWork(user_id, company, position, location, start, end, description, csrftoken))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Experience);","map":{"version":3,"sources":["/Users/asiataylor/Development/env1/django-drf-react/project/frontend/src/components/forms/Experience.js"],"names":["React","Component","connect","work","getCookie","IconButton","FaTimes","FaPlus","Experience","state","company","position","location","start","end","description","csrftoken","workSubmit","e","preventDefault","props","addWork","user","id","setTimeout","window","reload","user_id","dispatch","getState","token","auth","body","JSON","stringify","headers","fetch","method","mode","then","res","status","json","data","console","log","type","note","fetchWork","username","response","responseData","setState","catch","err","componentWillMount","render","target","value","map","el","deleteWork","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {work} from \"../../actions\";\nimport {getCookie} from './get_csrf'\nimport IconButton from '@material-ui/core/IconButton';\nimport {FaTimes,FaPlus} from 'react-icons/fa';\n\n\nclass Experience extends Component{\n\n  state ={\n    company:\"\",\n    position:\"\",\n    location:\"\",\n    start:\"\",\n    end:null,\n    description:\"\",\n    work:[],\n    csrftoken:getCookie('csrftoken'),\n  }\n\n  workSubmit = e => {\n    e.preventDefault();\n    var csrftoken = getCookie('csrftoken');\n    this.props.addWork(this.props.user.id,this.state.company,this.state.position,this.state.location,this.state.start, this.state.end, this.state.description,csrftoken)\n    setTimeout(function(){window.location.reload();},10);\n  }\n\naddWork(user_id,company,position,location,start,end,description){\n    return(dispatch,getState) => {\n      const token = getState().auth.token;\n      let body = JSON.stringify({user_id,company,position,location,start,end,description});\n      let headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      };\n\n      if (token) {\n        headers[\"Authorization\"] = `Token ${token}`;\n      }\n\n      return fetch(\"/api/work/\", {headers,body,method:\"POST\",mode:\"same-origin\"})\n      .then(res => {\n                if (res.status < 500) {\n                    return res.json().then(data => {\n                        return {status: res.status, data};\n                    })\n                } else {\n                    console.log(\"Server Error!\");\n                    throw res;\n                }\n            })\n            .then(res => {\n                if (res.status === 201) {\n                    return dispatch({type: 'ADD_WORK', note: res.data});\n                } else if (res.status === 401 || res.status === 403) {\n                    dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n                    throw res.data;\n                }\n            })\n    }\n  }\n\n\n  fetchWork(){\n         fetch(`/api/user-work/${this.props.user.username}/`)\n           .then(response => { return response.json();}).then(responseData => {return responseData; })\n          .then (json =>this.setState({work: json})).catch(err => {\n                console.log(\"fetch error\" + err);\n            });\n  }\n\n  componentWillMount(){\n    this.fetchWork();\n  }\n\n  render(){\n      return(\n      <div>\n      <button className=\"accordion btn-animated\"><h2>Experience<FaPlus className=\"expand\"/></h2></button>\n        <form className=\"form\" onSubmit={this.workSubmit}>\n         <div className=\"form-group\">\n          <input className=\"input-small group-1\" onChange={e => this.setState({company: e.target.value})} placeholder=\"Company\" type=\"text\"/>\n          <input className=\"input-small group-1\" onChange={e => this.setState({position: e.target.value})} placeholder=\"Position\" type=\"text\"/>\n          <input className=\"input-small group-1\" onChange={e => this.setState({location: e.target.value})} placeholder=\"Location\" type=\"text\"/>\n          <input className=\"input-small group-2\" onChange={e => this.setState({start: e.target.value})} id=\"start\" type=\"date\"/>\n          <label>to</label>\n          <input className=\"input-small group-2\" onChange={e => this.setState({end: e.target.value})} id=\"end\" type=\"date\" />\n         </div>\n          <textarea onChange={e => this.setState({description: e.target.value})} maxLength=\"300\" placeholder=\"Description\"></textarea>\n          <button className = \"submit\">Submit</button>\n        </form>\n        <div>\n        {this.state.work.map(el => {\n              return <div key={el.id}>\n                   <h3 className=\"main res-item\">{el.company}, </h3><span className=\"res-item\">{el.location} -</span>\n                   <span className=\"position\">{el.position} </span>\n                   <IconButton className=\"delete\" onClick={()=>this.props.deleteWork(el.id,this.state.csrftoken).then(this.fetchWork())} ><FaTimes/></IconButton>\n                   <p className=\"date res-item\">{el.start}-{el.end}</p>\n                   <p className=\"desc res-item\">{el.description}</p>\n              </div>\n          })}\n       </div>\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteWork: (id) => dispatch(work.deleteWork(id)),\n    addWork:(user_id,company,position,location,start,end,description,csrftoken)=>dispatch(work.addWork(user_id,company,position,location,start,end,description,csrftoken)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Experience);\n"]},"metadata":{},"sourceType":"module"}